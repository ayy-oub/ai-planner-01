{
  "info": {
    "name": "AI Planner API - Complete Collection",
    "description": "Complete Postman collection for AI Planner API testing with authentication, CRUD operations, AI features, and real-time collaboration",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Basic Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Health check successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data.status).to.equal(\"healthy\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Detailed Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health/detailed",
              "host": ["{{base_url}}"],
              "path": ["health", "detailed"]
            }
          },
          "response": []
        },
        {
          "name": "Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/metrics",
              "host": ["{{base_url}}"],
              "path": ["metrics"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{test_email}}\",\n    \"password\": \"{{test_password}}\",\n    \"displayName\": \"{{test_user_name}}\",\n    \"acceptTerms\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"User registration successful\", function () {",
                  "    pm.response.to.have.status(201);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('userId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"{{test_email}}\",\n    \"password\": \"{{test_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Login successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('accessToken');",
                  "    pm.expect(jsonData.data).to.have.property('refreshToken');",
                  "    ",
                  "    // Save tokens to environment",
                  "    pm.environment.set('access_token', jsonData.data.accessToken);",
                  "    pm.environment.set('refresh_token', jsonData.data.refreshToken);",
                  "    pm.environment.set('user_id', jsonData.data.user.userId);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Get current user successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('userId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"refreshToken\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Token refresh successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('accessToken');",
                  "    ",
                  "    // Update access token",
                  "    pm.environment.set('access_token', jsonData.data.accessToken);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"displayName\": \"Updated Name\",\n    \"preferences\": {\n        \"theme\": \"dark\",\n        \"notifications\": false\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/update-profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "update-profile"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Profile update successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Logout successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/me",
              "host": ["{{base_url}}"],
              "path": ["users", "me"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Get user profile successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('userId');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update User Preferences",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"preferences\": {\n        \"theme\": \"dark\",\n        \"accentColor\": \"#FF6B6B\",\n        \"notifications\": {\n            \"email\": true,\n            \"push\": false\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/me/preferences",
              "host": ["{{base_url}}"],
              "path": ["users", "me", "preferences"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Planner Management",
      "item": [
        {
          "name": "Create Planner",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"My Work Planner\",\n    \"description\": \"Daily work tasks and project management\",\n    \"color\": \"#3B82F6\",\n    \"icon\": \"briefcase\",\n    \"settings\": {\n        \"allowCollaboration\": true,\n        \"reminderEnabled\": true\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/planners",
              "host": ["{{base_url}}"],
              "path": ["planners"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Create planner successful\", function () {",
                  "    pm.response.to.have.status(201);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    ",
                  "    // Save planner ID for future requests",
                  "    pm.environment.set('planner_id', jsonData.data.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "List Planners",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/planners?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["planners"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"List planners successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('planners');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Planner by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/planners/{{planner_id}}",
              "host": ["{{base_url}}"],
              "path": ["planners", "{{planner_id}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Get planner by ID successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data.id).to.equal(pm.environment.get('planner_id'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Planner",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated Work Planner\",\n    \"description\": \"Updated description\",\n    \"settings\": {\n        \"allowCollaboration\": false\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/planners/{{planner_id}}",
              "host": ["{{base_url}}"],
              "path": ["planners", "{{planner_id}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Update planner successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Share Planner",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"collaborator@example.com\",\n    \"role\": \"editor\",\n    \"message\": \"Join my planner!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/planners/{{planner_id}}/share",
              "host": ["{{base_url}}"],
              "path": ["planners", "{{planner_id}}", "share"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Share planner successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Section Management",
      "item": [
        {
          "name": "Create Section",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Planning Phase\",\n    \"description\": \"Initial planning and research\",\n    \"type\": \"tasks\",\n    \"order\": 1\n}"
            },
            "url": {
              "raw": "{{base_url}}/planners/{{planner_id}}/sections",
              "host": ["{{base_url}}"],
              "path": ["planners", "{{planner_id}}", "sections"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Create section successful\", function () {",
                  "    pm.response.to.have.status(201);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    ",
                  "    // Save section ID for future requests",
                  "    pm.environment.set('section_id', jsonData.data.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "List Sections",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/planners/{{planner_id}}/sections",
              "host": ["{{base_url}}"],
              "path": ["planners", "{{planner_id}}", "sections"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"List sections successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('sections');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Section",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Updated Planning Phase\",\n    \"description\": \"Updated description\",\n    \"settings\": {\n        \"collapsed\": false,\n        \"color\": \"#10B981\"\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/sections/{{section_id}}",
              "host": ["{{base_url}}"],
              "path": ["sections", "{{section_id}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Update section successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Activity Management",
      "item": [
        {
          "name": "Create Activity",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Design Database Schema\",\n    \"description\": \"Create ERD and define relationships for the new feature\",\n    \"type\": \"task\",\n    \"priority\": \"high\",\n    \"dueDate\": \"{{$randomDateFuture}}\",\n    \"tags\": [\"backend\", \"database\", \"design\"],\n    \"metadata\": {\n        \"estimatedDuration\": 180,\n        \"difficulty\": 4\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/sections/{{section_id}}/activities",
              "host": ["{{base_url}}"],
              "path": ["sections", "{{section_id}}", "activities"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Create activity successful\", function () {",
                  "    pm.response.to.have.status(201);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('id');",
                  "    ",
                  "    // Save activity ID for future requests",
                  "    pm.environment.set('activity_id', jsonData.data.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "List Activities",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/sections/{{section_id}}/activities",
              "host": ["{{base_url}}"],
              "path": ["sections", "{{section_id}}", "activities"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"List activities successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('activities');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Update Activity Status",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"completed\",\n    \"completedAt\": \"{{$isoTimestamp}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/activities/{{activity_id}}",
              "host": ["{{base_url}}"],
              "path": ["activities", "{{activity_id}}"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Update activity successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Complete Activity",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/activities/{{activity_id}}/complete",
              "host": ["{{base_url}}"],
              "path": ["activities", "{{activity_id}}", "complete"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Complete activity successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "AI Features",
      "item": [
        {
          "name": "AI Task Suggestions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"context\": {\n        \"currentTasks\": [\n            {\"title\": \"Design UI\", \"status\": \"in-progress\"},\n            {\"title\": \"Write tests\", \"status\": \"pending\"}\n        ],\n        \"goals\": [\"Launch MVP by Q2\", \"Improve user engagement\"],\n        \"constraints\": [\"2 developers\", \"limited budget\"],\n        \"preferences\": {\n            \"difficulty\": \"medium\",\n            \"timeAvailable\": 40\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/ai/suggest-tasks",
              "host": ["{{base_url}}"],
              "path": ["ai", "suggest-tasks"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"AI task suggestions successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('suggestions');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Optimize Schedule",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"plannerId\": \"{{planner_id}}\",\n    \"constraints\": {\n        \"workingHours\": {\n            \"start\": \"09:00\",\n            \"end\": \"17:00\"\n        },\n        \"breakDuration\": 60,\n        \"maxTasksPerDay\": 8\n    },\n    \"preferences\": {\n        \"focusTime\": 120,\n        \"bufferTime\": 15,\n        \"priorityWeight\": 0.7\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/ai/optimize-schedule",
              "host": ["{{base_url}}"],
              "path": ["ai", "optimize-schedule"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Schedule optimization successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('optimizedSchedule');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Productivity Analysis",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"dateRange\": {\n        \"start\": \"{{$randomDateRecent}}\",\n        \"end\": \"{{$randomDateFuture}}\"\n    },\n    \"metrics\": {\n        \"completedTasks\": 15,\n        \"totalTimeSpent\": 2400,\n        \"averageCompletionTime\": 160,\n        \"peakProductivityHours\": [9, 10, 14, 15]\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/ai/analyze-productivity",
              "host": ["{{base_url}}"],
              "path": ["ai", "analyze-productivity"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Productivity analysis successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('score');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Export Features",
      "item": [
        {
          "name": "Export Planner as PDF",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"plannerId\": \"{{planner_id}}\",\n    \"format\": \"pdf\",\n    \"options\": {\n        \"includeCompleted\": true,\n        \"includeNotes\": true,\n        \"theme\": \"professional\",\n        \"layout\": \"landscape\"\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/export/pdf",
              "host": ["{{base_url}}"],
              "path": ["export", "pdf"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Export PDF successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('downloadUrl');",
                  "    ",
                  "    // Save export ID",
                  "    pm.environment.set('export_id', jsonData.data.exportId);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Export to Calendar",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"plannerId\": \"{{planner_id}}\",\n    \"format\": \"ics\",\n    \"options\": {\n        \"includeCompleted\": false,\n        \"dateRange\": {\n            \"start\": \"{{$randomDateRecent}}\",\n            \"end\": \"{{$randomDateFuture}}\"\n        }\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/export/calendar",
              "host": ["{{base_url}}"],
              "path": ["export", "calendar"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Export calendar successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('downloadUrl');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Check Export Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/export/{{export_id}}/status",
              "host": ["{{base_url}}"],
              "path": ["export", "{{export_id}}", "status"]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Export status check successful\", function () {",
                  "    pm.response.to.have.status(200);",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    pm.expect(jsonData.data).to.have.property('status');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Calendar Integration",
      "item": [
        {
          "name": "Sync with Google Calendar",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"accessToken\": \"ya29.a0AfH6SMBx...\",\n    \"syncDirection\": \"bidirectional\",\n    \"calendarId\": \"primary\",\n    \"syncOptions\": {\n        \"syncPastDays\": 30,\n        \"syncFutureDays\": 90,\n        \"includeCompleted\": false\n    }\n}"
            },
            "url": {
              "raw": "{{base_url}}/calendar/sync/google",
              "host": ["{{base_url}}"],
              "path": ["calendar", "sync", "google"]
            }
          },
          "response": []
        },
        {
          "name": "Get Calendar Events",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/calendar/events?start=2024-01-01&end=2024-12-31",
              "host": ["{{base_url}}"],
              "path": ["calendar", "events"],
              "query": [
                {
                  "key": "start",
                  "value": "2024-01-01"
                },
                {
                  "key": "end",
                  "value": "2024-12-31"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Collaboration",
      "item": [
        {
          "name": "Get Collaborators",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/planners/{{planner_id}}/collaborators",
              "host": ["{{base_url}}"],
              "path": ["planners", "{{planner_id}}", "collaborators"]
            }
          },
          "response": []
        },
        {
          "name": "Add Collaborator",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"teammate@example.com\",\n    \"role\": \"editor\",\n    \"permissions\": [\"read:planner\", \"write:activities\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/planners/{{planner_id}}/collaborators",
              "host": ["{{base_url}}"],
              "path": ["planners", "{{planner_id}}", "collaborators"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin Operations",
      "item": [
        {
          "name": "Get System Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/stats",
              "host": ["{{base_url}}"],
              "path": ["admin", "stats"]
            }
          },
          "response": []
        },
        {
          "name": "List All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/admin/users?page=1&limit=20",
              "host": ["{{base_url}}"],
              "path": ["admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-refresh token if expired",
          "const tokenExpiry = pm.environment.get('token_expiry');",
          "const refreshToken = pm.environment.get('refresh_token');",
          "const currentTime = Math.floor(Date.now() / 1000);",
          "",
          "if (tokenExpiry && currentTime > tokenExpiry && refreshToken) {",
          "    console.log('Token expired, refreshing...');",
          "    ",
          "    pm.sendRequest({",
          "        url: pm.environment.get('base_url') + '/auth/refresh',",
          "        method: 'POST',",
          "        header: {",
          "            'Content-Type': 'application/json'",
          "        },",
          "        body: {",
          "            mode: 'raw',",
          "            raw: JSON.stringify({",
          "                refreshToken: refreshToken",
          "            })",
          "        }",
          "    }, function (err, res) {",
          "        if (err) {",
          "            console.log('Token refresh failed:', err);",
          "            return;",
          "        }",
          "        ",
          "        if (res.code === 200) {",
          "            const jsonData = res.json();",
          "            pm.environment.set('access_token', jsonData.data.accessToken);",
          "            pm.environment.set('token_expiry', currentTime + 900); // 15 minutes",
          "            console.log('Token refreshed successfully');",
          "        }",
          "    });",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Generic test for all responses",
          "pm.test(\"Response time is less than 5000ms\", function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test(\"Response has valid JSON structure\", function () {",
          "    const jsonData = pm.response.json();",
          "    pm.expect(jsonData).to.have.property('success');",
          "    pm.expect(jsonData).to.have.property('message');",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000/api/v1",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "planner_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "section_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "activity_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "export_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "token_expiry",
      "value": "",
      "type": "string"
    },
    {
      "key": "test_email",
      "value": "test.user@example.com",
      "type": "string"
    },
    {
      "key": "test_password",
      "value": "TestPassword123!",
      "type": "string"
    },
    {
      "key": "test_user_name",
      "value": "Test User",
      "type": "string"
    },
    {
      "key": "admin_access_token",
      "value": "",
      "type": "string"
    }
  ]
}